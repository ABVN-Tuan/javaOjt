//@ui5-bundle employee-new/Component-preload.js
sap.ui.require.preload({
	"employee-new/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","employee/model/models"],(e,t)=>{"use strict";return e.extend("employee.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"employee-new/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("employee.controller.App",{onInit(){}})});
},
	"employee-new/controller/homeView.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","./../model/models","./../model/formatter","sap/m/MessageBox","sap/m/MessageToast"],(e,t,a,s,o)=>{"use strict";return e.extend("employee.controller.homeView",{formatter:a,onInit:async function(){const e=this.getView();const a=await new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/ojt/",synchronizationMode:"None"});this.byId("itemTable").bindItems({path:"EntityList>/Employees",parameters:{$expand:"role,department"},template:new sap.m.ColumnListItem({type:"Active",press:this.onPressItem.bind(this),cells:[new sap.m.Text({text:"{EntityList>firstName},{EntityList>lastName}"}),new sap.m.Text({text:"{EntityList>role/name}"}),new sap.m.Text({text:"{EntityList>department/name}"}),new sap.m.Text({text:"{EntityList>email}"}),new sap.m.Button({id:"deleteButton",icon:"sap-icon://delete",type:"Transparent",press:this.onDeleteEmployee.bind(this),tooltip:"{i18n>deleteTooltip}",enabled:{parts:["role>/role"],formatter:this.formatter.isAdmin}})]})});this.byId("itemLeaveTable").bindItems({path:"EntityList>/leaveRequest",parameters:{$expand:"employee"},template:new sap.m.ColumnListItem({id:"leaveListItem",type:"Active",cells:[new sap.m.Text({text:"{EntityList>employee/firstName} {EntityList>employee/lastName}"}),new sap.m.Text({text:"{EntityList>startDate}"}),new sap.m.Text({text:"{EntityList>endDate}"}),new sap.m.Text({text:"{EntityList>status}"}),new sap.m.Text({text:"{EntityList>reason}"}),new sap.m.Button({id:"deleteLeaveButton",icon:"sap-icon://delete",type:"Transparent",press:this.onDeleteLeave.bind(this),enabled:{parts:["role>/role"],formatter:this.formatter.isAdmin}})]})});await e.setModel(a,"EntityList");const s=await t.getRole(e);await t.setVisibleControl(e);console.log(this.getView().getModel("EntityList"))},onPressItem:async function(e){const a=this.getView();const s=e.getSource();const o=s.getBindingContext("EntityList");try{const e=await o.requestObject();const t=new sap.ui.model.json.JSONModel(e);this.getView().setModel(t,"employDetail")}catch(e){}a.getModel("VisibleControl").setProperty("/",{list:false,detail:true,create:false,listLeave:false,createLeave:false});t._setModel(a,{isEdit:false},"Edit")},onPressBack:function(){const e=this.getView();e.getModel("VisibleControl").setProperty("/",{list:true,detail:false,create:false,listLeave:false,createLeave:false})},onPressLeave:function(){const e=this.getView();const t=new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/ojt/",synchronizationMode:"None"});e.getModel("VisibleControl").setProperty("/",{listLeave:true,createLeave:false,list:false,detail:false,create:false})},onPressEdit:function(){const e=this.getView();const t=e.getModel("Edit");const a=t.getProperty("/isEdit");t.setProperty("/isEdit",!a)},onPressCreList:function(){var e={statuses:[{key:"PENDING",text:"Pending"},{key:"APPROVED",text:"Approved"},{key:"REJECTED",text:"Rejected"}]};var t=new sap.ui.model.json.JSONModel(e);this.getView().setModel(t,"statusModel");const a={status:"Pending",reason:"",endDate:"",startDate:"",employee:{ID:""}};const s=this.getView();s.setModel(new sap.ui.model.json.JSONModel(a),"createLeaveDetail");s.getModel("VisibleControl").setProperty("/",{list:false,detail:false,create:false,listLeave:false,createLeave:true})},onPressCreEmp:function(){var e={Genders:[{key:"Male",text:"Male"},{key:"Female",text:"Female"}]};var t=new sap.ui.model.json.JSONModel(e);this.getView().setModel(t,"genderModel");const a={firstName:"",lastName:"",email:"",hireDate:"",dateOfBirth:"",salary:0,gender:"",role:{ID:""},department:{ID:""}};const s=this.getView();s.setModel(new sap.ui.model.json.JSONModel(a),"createDetail");s.getModel("VisibleControl").setProperty("/",{list:false,detail:false,create:true,listLeave:false,createLeave:false})},onDeleteEmployee:function(e){const t=e.getSource().getParent();const a=t.getBindingContext("EntityList");if(!a){sap.m.MessageToast.show("No data found");return}sap.m.MessageBox.confirm("Are you sure to delete?",{onClose:async e=>{if(e===sap.m.MessageBox.Action.OK){try{if(typeof a.delete==="function"){await a.delete();sap.m.MessageToast.show("Delete success")}else{sap.m.MessageBox.error("Delete fail")}}catch(e){sap.m.MessageBox.error("Delete fail"+e.message)}}}})},onCreateEmployee:async function(){const e=this.getView();const t=e.getModel("EntityList");const a=e.getModel("createDetail").getData();try{const s=t.bindList("/Employees");if(!a.firstName||!a.lastName){sap.m.MessageBox.warning("Please fill in name.");return}if(!a.email||!a.email){sap.m.MessageBox.warning("Please fill in email.");return}if(!a.hireDate||!a.hireDate){sap.m.MessageBox.warning("Please fill in hireDate.");return}if(!a.gender){sap.m.MessageBox.warning("Please fill in gender");return}if(!a.role.ID){sap.m.MessageBox.warning("Please fill in role.");return}if(!a.department.ID){sap.m.MessageBox.warning("Please fill in department.");return}await s.create(a);await t.refresh();e.getModel("VisibleControl").setProperty("/",{list:true,detail:false,create:false,listLeave:false,createLeave:false});sap.m.MessageToast.show("Create success")}catch(e){sap.m.MessageBox.error("Create employee fail",e)}},onCreateLeave:async function(){const e=this.getView();const t=e.getModel("EntityList");const a=e.getModel("createLeaveDetail").getData();try{const s=t.bindList("/leaveRequest");await s.create(a);sap.m.MessageToast.show("Create success");await t.refresh();e.getModel("VisibleControl").setProperty("/",{list:false,detail:false,create:false,listLeave:true,createLeave:false})}catch(e){sap.m.MessageBox.error("Create leave request fail",e)}},onPressUpdate:async function(){const e=this.getView();const t=e.getModel("EntityList");const a=e.getModel("employDetail").getData();const s=e.getModel("employDetail").getData();try{const e=t.bindContext("/calEmpSalary(...)");await e.ready();const a=e.getParameterContext();await a.setProperty("Employee/ID",s.ID);await a.setProperty("Employee/hireDate",s.hireDate);await a.setProperty("Employee/role_ID",s.role.ID);await a.setProperty("Employee/performanceRating",parseInt(s.performanceRating,10));await e.execute();const o=await e.requestObject();if(o.value!==null&&o.value!==undefined&&!isNaN(o.value)){await t.refresh();this.getView().getModel("employDetail").setProperty("/salary",o.value)}else{sap.m.MessageBox.error("Update fail")}}catch(e){sap.m.MessageBox.error("Call function fail: "+e.message)}try{const e=`/Employees(${a.ID})`;const s=t.bindContext(e);if(!s){sap.m.MessageBox.error("Not found data");return}const o=await s.getBoundContext();o.setProperty("firstName",a.firstName);o.setProperty("lastName",a.lastName);o.setProperty("email",a.email);o.setProperty("hireDate",a.hireDate);o.setProperty("salary",a.salary);o.setProperty("performanceRating",parseInt(a.performanceRating));o.setProperty("role_ID",a.role.ID);o.setProperty("department_ID",a.department.ID);sap.m.MessageToast.show("update employee success");await t.refresh()}catch(e){sap.m.MessageBox.error("Update employee fail",e)}},onPressSalary:async function(){const e=this.getView();const t=e.getModel("EntityList");const a=e.getModel("employDetail");const s=e.getModel("employDetail").getData().ID;const o=e.getModel("employDetail").getData();try{const e=t.bindContext("/calEmpSalary(...)");await e.ready();const a=e.getParameterContext();await a.setProperty("Employee/ID",o.ID);await a.setProperty("Employee/hireDate",o.hireDate);await a.setProperty("Employee/role_ID",o.role.ID);await a.setProperty("Employee/performanceRating",parseInt(o.performanceRating,10));await e.execute();const s=await e.requestObject();if(s.value!==null&&s.value!==undefined&&!isNaN(s.value)){await t.refresh();this.getView().getModel("employDetail").setProperty("/salary",s.value);sap.m.MessageToast.show("Calculate salary success")}else{sap.m.MessageBox.error("Calculate salary fail")}}catch(e){sap.m.MessageBox.error("Call function fail: "+e.message)}},onDeleteLeave:function(e){const t=e.getSource().getParent();const a=t.getBindingContext("EntityList");if(!a){sap.m.MessageToast.show("No data found");return}sap.m.MessageBox.confirm("Are you sure to delete?",{onClose:async e=>{if(e===sap.m.MessageBox.Action.OK){try{if(typeof a.delete==="function"){await a.delete();sap.m.MessageToast.show("Delete success")}else{sap.m.MessageBox.error("Delete fail")}}catch(e){sap.m.MessageBox.error("Delete fail"+e.message)}}}})},onChangeText:function(e){const t=e.getSource();let a=t.getValue();var s=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!a.match(s)){t.setValueState("Error");t.setValueStateText("Email not valid")}else{t.setValueState("Success");t.setValueStateText("Input email valid")}}})});
},
	"employee-new/i18n/i18n.properties":'# This is the resource bundle for project1\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=App Title\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=App Title\n#Company name\ncompanyName =SAP\n#Employee list title\n\nempListTitle=Employee List\nleaveListTitle=Leave Request List\nListTitle=Leave Request List\nleaveCreateTitle=Leave Request Create\nnameFirst=First name\nplaceholderFirstName=First name placeholder\nplaceholderLastName=Last name placeholder\nplaceholderEmail=Email placeholder\nplaceholderHireDate=Hire Date placeholder\nplaceholderRole= Role placeholder\nplaceholderDepartment=Department placeholder\nplaceholderPer= Performance rating\nhireDate = Hire Date\nrole=Role\nsalary=Salary\ndepartment=Department\nnameLast =Last name\nnameText=Name\ngenderText=Gender\ndeparText=Department\nlevelText=Level\nroleText=Role\ncertificate=Certificate\nuploadPlaceholder=Choose a file for Upload...\nDobText=Date of Birth\nworkFromText=Working From\nsalaryText=Salary\nemailText=Email\nemployeeDetail=Employee Detail\ndeleteText= Delete\ndeleteToolTip=Delete record\nemployeeCreate =Create employee\nemployee=Employee\nstart=Start Date\nend=End date\nstatus=Status\nreason=Reason\ndeleteTooltip=Delete',
	"employee-new/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"employee-new","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"71b7af4a-81c0-4432-8c82-36921c03a607"},"dataSources":{"mainService":{"uri":"/ojt/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"employee.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"employee.view","async":true,"viewPath":"employee.view"},"routes":[{"name":"RoutehomeView","pattern":":?query:","target":["TargethomeView"]}],"targets":{"TargethomeView":{"id":"homeView","name":"homeView"}}},"rootView":{"viewName":"employee.view.App","type":"XML","id":"App","async":true}}}',
	"employee-new/model/formatter.js":function(){
sap.ui.define([],()=>{"use strict";return{isAdmin:function(i){return i==="admin"}}});
},
	"employee-new/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,t){"use strict";return{createDeviceModel:function(){var o=new e(t);o.setDefaultBindingMode("OneWay");return o},_setModel:function(t,o,n){t.setModel(new e(o),n)},_getModel:function(e,t){let o=e.getModel(t);return o},setInitialModel:function(e){},setVisibleControl:function(e){const t={list:true,detail:false,create:false,listLeave:false,createLeave:false};this._setModel(e,t,"VisibleControl")},getRole:async function(e){try{const t=await fetch("/ojt/whoami",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let o=await t.json();let n=o.value;this._setModel(e,{role:n},"role");return n}if(t.status!=200){this._setModel(e,{"":""},"role");return role}}catch(t){this._setModel(e,{"":""},"role");return role}}}});
},
	"employee-new/view/App.view.xml":'<mvc:View controllerName="employee.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"employee-new/view/fragment/create.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="createEmp" class="detailContainer" width="100%" height="100%" alignItems="Center" visible="{VisibleControl>/create}"><HBox id="createHeader" width="100%" justifyContent="SpaceBetween" gap="1.5rem"><Title id="createTitle" text="{i18n>employeeCreate}" class="titleDetail" /></HBox><VBox id="creaetContentID" class="detailContent" width="80%"><VBox id="creFormID" class="form" gap="1.5rem"><HBox id="creNameFirstID" alignItems="Center"><VBox id="creNameFirstLabelID" width="10%"><Label id="creNameFirstLabel" text="{i18n>nameFirst}" required="true" /></VBox><VBox id="creNameFirstTextID" width="50%"><Input id="creNameFirstInput" type="Text" placeholder="{i18n>placeholderFirstName}" value="{createDetail>/firstName}" /></VBox></HBox><HBox id="creNameLastID" alignItems="Center"><VBox id="creNameLastLabelID" width="10%"><Label id="creNameLastLabel" text="{i18n>nameLast}" required="true" /></VBox><VBox id="creNameLastTextID" width="50%"><Input id="creNameLastInput" type="Text" placeholder="{i18n>placeholderLastName}" value="{createDetail>/lastName}" /></VBox></HBox><HBox id="creEmailID" alignItems="Center"><VBox id="creEmailLabelID" width="10%"><Label id="creEmailLabel" text="{i18n>emailText}" required="true" /></VBox><VBox id="creEmailTextID" width="50%"><Input id="creEmailInput" type="Text" placeholder="{i18n>placeholderEmail}" value="{createDetail>/email}" liveChange="onChangeText" /></VBox></HBox><HBox id="creHideDateID" alignItems="Center"><VBox id="creHireDateLabelID" width="10%"><Label id="creHireDateLabel" text="{i18n>hireDate}" required="true"/></VBox><VBox id="creHireDateTextID" width="50%"><DatePicker id="creHireDateInput" placeholder="{i18n>placeholderHireDate}" value="{createDetail>/hireDate}" valueFormat="yyyy-MM-dd"/></VBox></HBox><HBox id="creDob" alignItems="Center"><VBox id="creDobLabelID" width="10%"><Label id="creDobLabel" text="{i18n>DobText}" required="true"  /></VBox><VBox id="creHDobTextID" width="50%"><DatePicker id="creDobInput"  placeholder="{i18n>DobText}" value="{createDetail>/dateOfBirth}" valueFormat="yyyy-MM-dd" /></VBox></HBox><HBox id="creGen" alignItems="Center"><VBox id="creGenLabelID" width="10%"><Label id="creGenLabel" text="{i18n>genderText}" required="true" /></VBox><VBox id="creGenTextID" width="50%"><ComboBox id="creCbbGen" items="{genderModel>/Genders}" width="100%" placeholder="{i18n>placeholderRole}" selectedKey="{createDetail>/gender}" required="true"><core:Item id="creItemGen" key="{genderModel>key}" text="{genderModel>text}" /></ComboBox></VBox></HBox><HBox id="creRoleID" alignItems="Center"><VBox id="creRoleLabelID" width="10%"><Label id="creRoleLabel" text="{i18n>role}" required="true" /></VBox><VBox id="creRoleTextID" width="50%"><ComboBox id="creCbbRole" items="{path: \'EntityList>/Roles\'}" width="100%" placeholder="{i18n>placeholderRole}" selectedKey="{createDetail>/role/ID}" required="true"><core:Item id="creItemRole" key="{EntityList>ID}" text="{EntityList>name}" /></ComboBox></VBox></HBox><HBox id="creDepartmentID" alignItems="Center"><VBox id="creDepartmentLabelID" width="10%"><Label id="creDepartmentLabel" text="{i18n>department}" required="true" /></VBox><VBox id="creDepartmentTextID" width="50%"><ComboBox id="creCbbDepart" items="{path: \'EntityList>/Departments\'}" width="100%" placeholder="{i18n>placeholderDepartment}" selectedKey="{createDetail>/department/ID}" ><core:Item id="creItemDepart" key="{EntityList>ID}" text="{EntityList>name}" /></ComboBox></VBox></HBox><Button id="creaetButton" icon="sap-icon://create" type="Transparent" press=".onCreateEmployee" text = "Create employee" visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></VBox></VBox></VBox></core:FragmentDefinition>',
	"employee-new/view/fragment/createLeave.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="createListLeave" class="detailContainer" width="100%" height="100%" alignItems="Center" visible="{VisibleControl>/createLeave}"><HBox id="create:istHeader" width="100%" justifyContent="SpaceBetween" gap="1.5rem"><Title id="createListTitle" text="{i18n>leaveCreateTitle}" class="titleDetail" /></HBox><VBox id="creaetListContentID" class="detailContent" width="80%"><VBox id="creListFormID" class="form" gap="1.5rem"><HBox id="creEmpID" alignItems="Center"><VBox id="creaEmpLeaveID" width="10%"><Label id="creLeaveLabel" text="{i18n>employee}" required="true" /></VBox><VBox id="creLeaveTextID" width="50%"><ComboBox id="creCbbEmp" items="{path: \'EntityList>/Employees\'}" width="100%" placeholder="{i18n>employee}" selectedKey="{createLeaveDetail>/employee/ID}" required="true"><core:Item id="creItemEmp" key="{EntityList>ID}" text="{EntityList>email}" /></ComboBox></VBox></HBox><HBox id="creStartID" alignItems="Center"><VBox id="creStartLabelID" width="10%"><Label id="creStartLabel" text="{i18n>start}" required="true" /></VBox><VBox id="creStartextID" width="50%"><DatePicker id="creStartInput" placeholder="{i18n>start}" value="{createLeaveDetail>/startDate}" valueFormat="yyyy-MM-dd"/></VBox></HBox><HBox id="creEndID" alignItems="Center"><VBox id="creEndLabelID" width="10%"><Label id="creEndLabel" text="{i18n>end}" required="true" /></VBox><VBox id="creEndTextID" width="50%"><DatePicker id="creEndInput" placeholder="{i18n>end}" value="{createLeaveDetail>/endDate}" valueFormat="yyyy-MM-dd" /></VBox></HBox><HBox id="creReasonID" alignItems="Center"><VBox id="creReasonLabelID" width="10%"><Label id="creReasonLabel" text="{i18n>reason}" required="true" /></VBox><VBox id="creReasonTextID" width="50%"><Input id="creReasonInput" type="Text" placeholder="{i18n>reason}" value="{createLeaveDetail>/reason}" /></VBox></HBox><Button id="creaetLeaveButton" icon="sap-icon://create" type="Transparent" press=".onCreateLeave" text = "Create employee" visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></VBox></VBox></VBox></core:FragmentDefinition>',
	"employee-new/view/fragment/detail.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="detailItem" class="detailContainer" width="100%" height="100%" alignItems="Center"\n    visible="{VisibleControl>/detail}"><HBox id="detailHeader" width="100%" justifyContent="SpaceBetween" gap="1.5rem"><Title id="detailTitle" text="{i18n>employeeDetail}" class="titleDetail" /></HBox><VBox id="detailContentID" class="detailContent" width="80%"><VBox id="formID" class="form" gap="1.5rem" ><HBox id="nameFirstID" alignItems="Center"><VBox id="nameFirstLabelID" width="15%"><Label id="nameFirstLabel" text="{i18n>nameFirst}" /></VBox><VBox id="nameFirstTextID" width="50%"><Input id="nameFirstInput" type="Text"\n                        placeholder="{i18n>placeholderFirstName}"\n                        value="{employDetail>/firstName}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="nameLastID" alignItems="Center"><VBox id="nameLastLabelID" width="15%"><Label id="nameLastLabel" text="{i18n>nameLast}" /></VBox><VBox id="nameLastTextID" width="50%"><Input id="nameLastInput" type="Text"\n                        placeholder="{i18n>placeholderLastName}"\n                        value="{employDetail>/lastName}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="emailID" alignItems="Center"><VBox id="emailLabelID" width="15%"><Label id="emailLabel" text="{i18n>emailText}" /></VBox><VBox id="emailTextID" width="50%"><Input id="emailInput" type="Text"\n                        placeholder="{i18n>placeholderEmail}"\n                        value="{employDetail>/email}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="hideDateID" alignItems="Center"><VBox id="hireDateLabelID" width="15%"><Label id="hireDateLabel" text="{i18n>hireDate}" /></VBox><VBox id="hireDateTextID" width="50%"><DatePicker id="hireDateInput" \n                        placeholder="{i18n>placeholderHireDate}"\n                        value="{employDetail>/hireDate}"\n                        valueFormat="yyyy-MM-dd" \n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="perID" alignItems="Center"><VBox id="perLabelID" width="15%"><Label id="perLabel" text="{i18n>placeholderPer}" /></VBox><VBox id="perTextID" width="50%"><Input id="perInput" type="Text"\n                        placeholder="{i18n>placeholderPer}"\n                        value="{employDetail>/performanceRating}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="roleID" alignItems="Center"><VBox id="roleLabelID" width="15%"><Label id="roleLabel" text="{i18n>role}" /></VBox><VBox id="roleTextID" width="50%"><ComboBox id="cbbRole" items="{path: \'EntityList>/Roles\'}" width="100%" enabled="{Edit>/isEdit}"\n                    placeholder="{i18n>placeholderRole}" selectedKey="{employDetail>/role/ID}"><core:Item id="itemRole" key="{EntityList>ID}" text="{EntityList>name}" /></ComboBox></VBox></HBox><HBox id="departmentID" alignItems="Center"><VBox id="departmentLabelID" width="15%"><Label id="departmentLabel" text="{i18n>department}" /></VBox><VBox id="departmentTextID" width="50%"><ComboBox id="cbbDepart" items="{path: \'EntityList>/Departments\'}" width="100%" enabled="{Edit>/isEdit}"\n                placeholder="{i18n>placeholderDepartment}" selectedKey="{employDetail>/department/ID}"><core:Item id="itemDepart" key="{EntityList>ID}" text="{EntityList>name}" /></ComboBox></VBox></HBox><HBox id="salaryID" alignItems="Center"><VBox id="salaryLabelID" width="15%"><Label id="salaryLabel" text="{i18n>salary}" /></VBox><VBox id="salaryTextID" width="50%"><Text id="salaryInput" text="{employDetail>/salary}"/></VBox></HBox><Toolbar id="ToolbarList" ><content><ToolbarSpacer id="ToolbarSpacerList" /><Button id="btn_edit" icon="sap-icon://edit" type="Transparent" press="onPressEdit" text="Change mode"\n                    visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }"/><Button id="btnSaveUpdate" type="Default" text="Update Information" press="onPressUpdate" visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }"/><Button id="btnUpdateSalary" type="Default" text="Update salary" press="onPressSalary" visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></content></Toolbar></VBox></VBox></VBox></core:FragmentDefinition>',
	"employee-new/view/fragment/list.fragment.xml":'<core:FragmentDefinition xmlns:table="sap.ui.table"\n    xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:tnt="sap.tnt"\n    xmlns:fb="sap.ui.comp.filterbar"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id = "listContainer" class = "listContainer" visible="{VisibleControl>/list}"><Title id = "listTitle" class = "listTitle" text = "{i18n>empListTitle}"></Title><VBox id = "vtable" class = "table"><Table id = "itemTable" rememberSelections="false" selectionChange=".onItemSelection"  items ="{path: \'EntityList>/Employees\'}" \n            itemPress=".onPressItem" fixedLayout="false" growingThreshold="100" updateFinished="onUpdateStatusTb" growing="true"><columns><Column id="colName" width="30%" hAlign="Left"><Label id="lName" text="{i18n>nameText}" textAlign="Center" width="100%" /></Column><Column id="colRole" hAlign="Center" width="20%"><Label id="lRole" text="{i18n>roleText}" textAlign="Center" width="100%" /></Column><Column id="colDepartment" width="20%" hAlign="Left"><Label id="lDepartment" text="{i18n>deparText}" width="100%" /></Column><Column id="colEmail" width="30%" hAlign="Left"><Label id="lEmail" text="{i18n>emailText}" textAlign="Left" width="100%" /></Column><Column id="colDelete" width="5%" hAlign="Center"><Label id="lDelete" text="{i18n>deleteText}" textAlign="Left" width="100%" /></Column></columns><items><ColumnListItem id="clListItem" vAlign="Middle" type="Active"><cells><Text id="txtName" class="textTable" text="{EntityList>firstName} {EntityList>lastName}" textAlign="Center" /><Text id="txtRole" class="textTable" text="{EntityList>role/name}" textAlign="Center" /><Text id="txtDepart" class="textTable" text="{EntityList>department/name}" wrapping="false" /><Text id="txtEmail" class="textTable" text="{EntityList>email}" textAlign="Center" /><Button id="deleteButton" icon="sap-icon://delete" type="Transparent" press=".onDeleteEmployee" tooltip="{i18n>deleteTooltip}"\n                            enabled = "{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></cells></ColumnListItem></items></Table></VBox></VBox></core:FragmentDefinition>',
	"employee-new/view/fragment/listLeave.fragment.xml":'<core:FragmentDefinition xmlns:table="sap.ui.table"\n    xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:tnt="sap.tnt"\n    xmlns:fb="sap.ui.comp.filterbar"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id = "listLeaveContainer" class = "listContainer" visible="{VisibleControl>/listLeave}"><Title id = "listLeaveTitle" class = "listTitle" text = "{i18n>ListTitle}"></Title><VBox id = "table" class = "table"><Table id = "itemLeaveTable" rememberSelections="false" selectionChange=".onItemSelection" items ="{path: \'EntityList>/leaveRequest\'}" \n            itemPress=".onPressLeaveItem" fixedLayout="false" growingThreshold="100" updateFinished="onUpdateStatusTb" growing="true"><columns><Column id="colEmp" width="30%" hAlign="Left"><Label id="lEmp" text="{i18n>employee}" textAlign="Center" width="100%" /></Column><Column id="colStart" hAlign="Center" width="20%"><Label id="lStart" text="{i18n>start}" textAlign="Center" width="100%" /></Column><Column id="colEnd" width="20%" hAlign="Left"><Label id="lEnd" text="{i18n>end}" width="100%" /></Column><Column id="colStatus" width="30%" hAlign="Left"><Label id="lStatus" text="{i18n>status}" textAlign="Left" width="100%" /></Column><Column id="colReason" width="5%" hAlign="Center"><Label id="lReason" text="{i18n>reason}" textAlign="Left" width="100%" /></Column><Column id="colLeaveDelete" width="5%" hAlign="Center"><Label id="lLeaveDelete" text="{i18n>deleteText}" textAlign="Left" width="100%" /></Column></columns><items><ColumnListItem id="leaveListItem" vAlign="Middle" type="Active"><cells><Text id="txtEmp" class="textTable" text="{EntityList>employee/firstName} {EntityList>employee/lastName}" textAlign="Center" /><Text id="txtStart" class="textTable" text="{EntityList>startDate}" textAlign="Center" /><Text id="txtEnd" class="textTable" text="{EntityList>endDate}" wrapping="false" /><Text id="txtStatus" class="textTable" text="{EntityList>status}" textAlign="Center" /><Text id="txtReason" class="textTable" text="{EntityList>reason}" textAlign="Center" /><Button id="deleteLeaveButton" icon="sap-icon://delete" type="Transparent" press=".onDeleteLeave" tooltip="{i18n>deleteTooltip}"\n                            enabled = "{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></cells></ColumnListItem></items></Table><Button id="btncreateLeave" type="Default" text="Create leave request" press="onPressCreList" visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }"/></VBox></VBox></core:FragmentDefinition>',
	"employee-new/view/homeView.view.xml":'<mvc:View controllerName="employee.controller.homeView"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns:tnt="sap.tnt"\n    xmlns="sap.m"><Page id="page" showHeader="false" title="{i18n>title}" class = "page"><tnt:ToolHeader id="toolheader" class="toolHeader"><HBox id = "right" class = "right" ><Button id="back" type="Accept" text="Back" press="onPressBack"/><Image id = "Image" src = "./assets/logo.png" press="onPressHome" /><Title id = "Title" text="{i18n>companyName}" class = "title" level= "H3"/></HBox><HBox id="left" class= "left"><Button id="newEmp" type="Accept" text="Create Employee" press="onPressCreEmp"   visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /><Button id="leaveRequest" type="Accept" text="Leave Request" press="onPressLeave"   visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></HBox></tnt:ToolHeader><content><core:Fragment fragmentName="employee.view.fragment.list" type="XML"/><core:Fragment fragmentName="employee.view.fragment.detail" type="XML"/><core:Fragment fragmentName="employee.view.fragment.create" type="XML"/><core:Fragment fragmentName="employee.view.fragment.listLeave" type="XML"/><core:Fragment fragmentName="employee.view.fragment.createLeave" type="XML"/></content></Page></mvc:View>'
});
//# sourceMappingURL=Component-preload.js.map
